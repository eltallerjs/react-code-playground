{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["CodePlayground","data","console","axios","html","css","js","document","documentContents","id","cluster","forceTLS","componentDidUpdate","this","componentDidMount","pushid","render","codeMirrorOptions","theme","lineNumbers","scrollbarStyle","lineWrapping","className","value","options","mode","onBeforeChange","title","ref","App","ReactDOM","getElementById"],"mappings":"gkBAcaA,EAAb,Y,QACE,aAAc,aACZ,sBADY,YAsCA,WACZ,IAAMC,EAAO,EAAH,GAAQ,EAAlB,OACAC,eAEAC,wDAESD,QAFTC,QA1CY,UA+CJ,WAAM,MACY,EADZ,MACNC,EADM,OACAC,EADA,MACKC,EADL,KAIRC,EADS,OAAf,OACA,gBACMC,EAAmB,6SAAH,uIAAtB,2DAsBAN,eAEAK,SACAA,WACAA,WA5EA,QAAa,CACXE,GADW,GAEXL,KAFW,GAGXC,IAHW,GAIXC,GAAI,IAGN,SAAc,IAAI,EAAJ,yBAAmC,CAC/CI,QAD+C,MAE/CC,UAAU,IAGZ,UAAe,mBAAf,UAdY,E,EADhB,G,EAAA,G,6EAAA,8CAkBEC,WACEC,KAAA,WAnBJ,oBAsBEC,WAAoB,WAClBD,KAAA,SAAc,CACZJ,GAAIM,QAGNF,KAAA,4BAAiC,SAAAZ,GAAQ,IAC/BQ,EAAO,EADwB,SAEnCR,OAAJ,GAEA,WAAc,CACZG,KAAMH,EADM,KAEZI,IAAKJ,EAFO,IAGZK,GAAIL,EAAKK,SAlCjB,SAkFEU,WAAQ,aACoBH,KADpB,MACET,EADF,OACQE,EADR,KACYD,EADZ,MAEAY,EAAoB,CACxBC,MADwB,WAExBC,aAFwB,EAGxBC,eAHwB,KAIxBC,cAAc,GAIhB,OACE,yBAAKC,UAAU,wBACb,6BAASA,UAAU,cACjB,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,iBADjB,QAEE,gCACEC,MADF,EAEEC,QAAO,GACLC,KAAM,aAHV,GAMEC,eAAgB,gBACd,WAAc,CAAEtB,SAAQ,kBAAM,EAAN,qBAI9B,yBAAKkB,UAAU,wBACb,yBAAKA,UAAU,iBADjB,OAEE,gCACEC,MADF,EAEEC,QAAO,GACLC,KAAM,OAHV,GAMEC,eAAgB,gBACd,WAAc,CAAErB,QAAO,kBAAM,EAAN,qBAI7B,yBAAKiB,UAAU,uBACb,yBAAKA,UAAU,iBADjB,cAEE,gCACEC,MADF,EAEEC,QAAO,GACLC,KAAM,cAHV,GAMEC,eAAgB,gBACd,WAAc,CAAEpB,OAAM,kBAAM,EAAN,sBAK9B,6BAASgB,UAAU,UACjB,4BAAQK,MAAR,SAAuBL,UAAvB,SAA0CM,IAAI,cAxIxD,gBCLeC,G,MAJH,WACV,OAAO,kBAAC,EAAD,QCATC,IAASd,OAAO,kBAAC,EAAD,MAAST,SAASwB,eAAe,W","file":"static/js/main.57fa3779.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport styles from './styles.module.css'\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport Pusher from 'pusher-js';\nimport pushid from 'pushid';\nimport axios from 'axios';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nimport 'codemirror/mode/htmlmixed/htmlmixed';\nimport 'codemirror/mode/css/css';\nimport 'codemirror/mode/javascript/javascript';\n\nexport class CodePlayground extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: '',\n      html: '',\n      css: '',\n      js: '',\n    };\n\n    this.pusher = new Pusher(\"68c737789ee47b308987\", {\n      cluster: \"us3\",\n      forceTLS: true\n    });\n\n    this.channel = this.pusher.subscribe(\"editor\");\n  }\n\n  componentDidUpdate() {\n    this.runCode();\n  }\n\n  componentDidMount() {\n    this.setState({\n      id: pushid(),\n    });\n\n    this.channel.bind(\"code-update\", data => {\n      const { id } = this.state;\n      if (data.id === id) return;\n\n      this.setState({\n        html: data.html,\n        css: data.css,\n        js: data.js,\n      });\n    });\n  }\n\n  syncUpdates = () => {\n    const data = { ...this.state };\n    console.log(data);\n\n    axios\n      .post(\"http://localhost:5000/update-editor\", data)\n      .catch(console.error);\n  };\n\n  runCode = () => {\n    const { html, css, js } = this.state;\n\n    const iframe = this.refs.iframe;\n    const document = iframe.contentDocument;\n    const documentContents = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n        <title>Document</title>\n        <style>\n          ${css} !important\n        </style>\n      </head>\n      <body>\n        ${html}\n\n        <script type=\"text/javascript\">\n          ${js}\n        </script>\n      </body>\n      </html>\n    `;\n\n    console.log(document);\n\n    document.open();\n    document.write(documentContents);\n    document.close();\n  };\n\n  render(){\n    const { html, js, css } = this.state;\n    const codeMirrorOptions = {\n      theme: 'material',\n      lineNumbers: true,\n      scrollbarStyle: null,\n      lineWrapping: true,\n    };\n\n\n    return (\n      <div className=\"playground-container\">\n        <section className=\"playground\">\n          <div className=\"code-editor html-code\">\n            <div className=\"editor-header\">HTML</div>\n            <CodeMirror\n              value={html}\n              options={{\n                mode: \"htmlmixed\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, html) => {\n                this.setState({ html }, () => this.syncUpdates()); // update this line\n              }}\n            />\n          </div>\n          <div className=\"code-editor css-code\">\n            <div className=\"editor-header\">CSS</div>\n            <CodeMirror\n              value={css}\n              options={{\n                mode: \"css\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, css) => {\n                this.setState({ css }, () => this.syncUpdates()); // update this line\n              }}\n            />\n          </div>\n          <div className=\"code-editor js-code\">\n            <div className=\"editor-header\">JavaScript</div>\n            <CodeMirror\n              value={js}\n              options={{\n                mode: \"javascript\",\n                ...codeMirrorOptions\n              }}\n              onBeforeChange={(editor, data, js) => {\n                this.setState({ js }, () => this.syncUpdates()); // update this line\n              }}\n            />\n          </div>\n        </section>\n        <section className=\"result\">\n          <iframe title=\"result\" className=\"iframe\" ref=\"iframe\" />\n        </section>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nimport { CodePlayground } from 'react-code-playground'\nimport 'react-code-playground/dist/index.css'\n\nconst App = () => {\n  return <CodePlayground />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}